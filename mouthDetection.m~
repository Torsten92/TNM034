function [corrVal, mouthImg] = mouthDetection(subImage)
corrVal = 0;

% mouth map
subImageYCbCr = rgb2ycbcr(subImage);

im2Y = im2double(subImageYCbCr(:,:,1));
im2Cb = im2double(subImageYCbCr(:,:,2));
im2Cr = im2double(subImageYCbCr(:,:,3));


%calculate n, "eta"
chromaLength = size(im2Cr(:), 1);
top = ((1/chromaLength) * sum(im2Cr(:).*im2Cr(:)));
bot = ((1/chromaLength) * sum(im2Cr(:)./im2Cb(:)));
n = 0.97 *( top./bot );

%calculate mouthmask 
mouthMap = (im2Cr.*im2Cr) .* ((im2Cr.*im2Cr) - n.*(im2Cr./im2Cb)).^2;
mouthMap = mouthMap./max(mouthMap(:));
%mouthMask = mouthMask > 0.4;
%show mask and the "cleaned" image

[r c] = size(mouthMap);

middleColumn = c/2;


assignin('base', 'mouthMap', mouthMap);

%decide how many pixels a region must have to not be erased 
%we decided that regions that are has less than 0.15% pixels of the image will be erased (empriskt) 
numbOfpixels = round(r*c*0.0023);
%if the pixel value is greater than 35% set pixel value to 1 the rest is 0
mouthImg = mouthMap > 0.35;

for i= 1:r
    for j= 1:c
        if mouthImg(i,j) == 1
            i = i+1
            for j= 1:c
            if(mouthImg(i,j))
        end
    end
end
    
    
assignin('base', 'I2', I2);
%erase white regions if it contains less than numbOfpixels pixels
mouthImg = bwareaopen(mouthImg, numbOfpixels);

%Dilate first to fill lips. Erode to remove artefacts

numbOfpixels = round(numbOfpixels/70);
se = strel('disk', numbOfpixels);
mouthImg = imerode(imdilate(mouthImg, se), se);
L = imfill(mouthImg, 'holes');


